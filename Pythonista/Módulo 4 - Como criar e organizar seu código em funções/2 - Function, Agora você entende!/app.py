# Fun√ß√µes
# input()
# len()
# split()

# O que elas tem em comum? - Pegam uma funcionalidade acima, recebem alguns parametros e fazem algo internamente
 
# Uma fun√ß√£o segue a seguinte sintaxe
def nome_fun√ß√£o(parametros):
    pass

def dar_boas_vindas():
    print('Bem-vindo!')

dar_boas_vindas()

def dar_boas_vindas_personalizado(nome): # Poder ser adicionado mais parametros  idade, last...
    print(f'Bem-vindo(a) {nome}')

dar_boas_vindas_personalizado('Isaque')

# Valor padr√£o
def apresentar_lugar(horario_funcionamento, lugar='nossa loja'): # Caso tenha valor padr√£o (Lugar) deve ficar no final 
    print(f'Conhe√ßa {lugar}, hor√°rio de funcionamento das {horario_funcionamento}')

apresentar_lugar('8h as 18h','Castelo') # Caso coloque info, ser√° substituida

###############################################################################################################################################################

# ‚ÄãDesafio ü•á

# DESAFIO 1 - Crie uma fun√ß√£o chamada gerar_nome_completo que recebe como par√¢metro o nome e sobrenome de algu√©m e d√° boas vindas para essa pessoa
def gerar_nome_completo(nome, sobrenome):
    print(f'Ol√° {nome} {sobrenome}, seja muito bem-vindo!')

gerar_nome_completo('Isaque', 'Rhudielli')

# DESAFIO 2 - # Crie uma fun√ß√£o chamada calcular_valores que recebe 2 par√¢metros o primeiro o preco de um produto e o segundo par√¢metro √© a quantidade, por√©m a quantidade deve haver um valor padr√£o de 1. Sua fun√ß√£o deve exibir o resultado do pre√ßo do produto, multiplicado a quantidade escolhida.
def calcular_valores(preco, quantidade = 1):
    print(preco*quantidade)

calcular_valores(10, 2)